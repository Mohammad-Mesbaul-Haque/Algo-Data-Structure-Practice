What is runtime complexity?
It describes the performance of an algorithm. If we double input , how much it will impact on processing power or time explains the runtime complexity.
example: If 10 inputs cost 10 seconds, after doubling the input if it takes 20 seconds then  it will be n time complexity. Contrary if it takes same time or 10 seconds then  it will be constant time complexity (1)

CONSTANT TIME:
It will take same amount of time whether we work with any amount of elements. example: Access a property of object using key.

LOGARITHMIC TIME:
Time or work won't be double if we double out input rather it will increase a little amount of time. example: binary search

LINEAR TIME:
Time or work will increase exact same of elements or inputs. example: string reverse

COASILINEAR TIME:


QUADRATIC TIME:


EXPONENTIAL TIME:

different complexity's comparative:
1. Constant time complexity is best among all.
2. Logarithmic time complexity is good
3. Linear time complexity also good relatively rest of others.
4. COASILINEAR time complexity is not so good.
5. Quadratic time complexity is is so much bad.
6. Exponential time complexity is worst among others.